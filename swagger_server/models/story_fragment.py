# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StoryFragment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, text: str=None, story_id: int=None):  # noqa: E501
        """StoryFragment - a model defined in Swagger

        :param id: The id of this StoryFragment.  # noqa: E501
        :type id: int
        :param text: The text of this StoryFragment.  # noqa: E501
        :type text: str
        :param story_id: The story_id of this StoryFragment.  # noqa: E501
        :type story_id: int
        """
        self.swagger_types = {
            'id': int,
            'text': str,
            'story_id': int
        }

        self.attribute_map = {
            'id': 'id',
            'text': 'text',
            'story_id': 'story_id'
        }
        self._id = id
        self._text = text
        self._story_id = story_id

    @classmethod
    def from_dict(cls, dikt) -> 'StoryFragment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StoryFragment of this StoryFragment.  # noqa: E501
        :rtype: StoryFragment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this StoryFragment.


        :return: The id of this StoryFragment.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this StoryFragment.


        :param id: The id of this StoryFragment.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def text(self) -> str:
        """Gets the text of this StoryFragment.


        :return: The text of this StoryFragment.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this StoryFragment.


        :param text: The text of this StoryFragment.
        :type text: str
        """

        self._text = text

    @property
    def story_id(self) -> int:
        """Gets the story_id of this StoryFragment.


        :return: The story_id of this StoryFragment.
        :rtype: int
        """
        return self._story_id

    @story_id.setter
    def story_id(self, story_id: int):
        """Sets the story_id of this StoryFragment.


        :param story_id: The story_id of this StoryFragment.
        :type story_id: int
        """

        self._story_id = story_id
